<?php
/**
 * InterventionPrescription
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * InterventionPrescription Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InterventionPrescription implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'education_organization_reference' => '\Swagger\Client\Model\EducationOrganizationReference',
        'identification_code' => 'string',
        'intervention_class_type' => 'string',
        'delivery_method_type' => 'string',
        'appropriate_grade_levels' => '\Swagger\Client\Model\InterventionPrescriptionAppropriateGradeLevel[]',
        'appropriate_sexes' => '\Swagger\Client\Model\InterventionPrescriptionAppropriateSex[]',
        'diagnoses' => '\Swagger\Client\Model\InterventionPrescriptionDiagnosis[]',
        'education_contents' => '\Swagger\Client\Model\InterventionPrescriptionEducationContent[]',
        'learning_resource_metadata_ur_is' => '\Swagger\Client\Model\InterventionPrescriptionLearningResourceMetadataURI[]',
        'population_serveds' => '\Swagger\Client\Model\InterventionPrescriptionPopulationServed[]',
        'uris' => '\Swagger\Client\Model\InterventionPrescriptionURI[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'education_organization_reference' => 'educationOrganizationReference',
        'identification_code' => 'identificationCode',
        'intervention_class_type' => 'interventionClassType',
        'delivery_method_type' => 'deliveryMethodType',
        'appropriate_grade_levels' => 'appropriateGradeLevels',
        'appropriate_sexes' => 'appropriateSexes',
        'diagnoses' => 'diagnoses',
        'education_contents' => 'educationContents',
        'learning_resource_metadata_ur_is' => 'learningResourceMetadataURIs',
        'population_serveds' => 'populationServeds',
        'uris' => 'uris',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'education_organization_reference' => 'setEducationOrganizationReference',
        'identification_code' => 'setIdentificationCode',
        'intervention_class_type' => 'setInterventionClassType',
        'delivery_method_type' => 'setDeliveryMethodType',
        'appropriate_grade_levels' => 'setAppropriateGradeLevels',
        'appropriate_sexes' => 'setAppropriateSexes',
        'diagnoses' => 'setDiagnoses',
        'education_contents' => 'setEducationContents',
        'learning_resource_metadata_ur_is' => 'setLearningResourceMetadataUrIs',
        'population_serveds' => 'setPopulationServeds',
        'uris' => 'setUris',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'education_organization_reference' => 'getEducationOrganizationReference',
        'identification_code' => 'getIdentificationCode',
        'intervention_class_type' => 'getInterventionClassType',
        'delivery_method_type' => 'getDeliveryMethodType',
        'appropriate_grade_levels' => 'getAppropriateGradeLevels',
        'appropriate_sexes' => 'getAppropriateSexes',
        'diagnoses' => 'getDiagnoses',
        'education_contents' => 'getEducationContents',
        'learning_resource_metadata_ur_is' => 'getLearningResourceMetadataUrIs',
        'population_serveds' => 'getPopulationServeds',
        'uris' => 'getUris',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $education_organization_reference A reference to the related EducationOrganization resource.
      * @var \Swagger\Client\Model\EducationOrganizationReference
      */
    protected $education_organization_reference;
    
    /**
      * $identification_code A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $identification_code;
    
    /**
      * $intervention_class_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $intervention_class_type;
    
    /**
      * $delivery_method_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $delivery_method_type;
    
    /**
      * $appropriate_grade_levels An unordered collection of interventionPrescriptionAppropriateGradeLevels.  Grade levels for the prescribed intervention-if omitted, considered generally applicable.
      * @var \Swagger\Client\Model\InterventionPrescriptionAppropriateGradeLevel[]
      */
    protected $appropriate_grade_levels;
    
    /**
      * $appropriate_sexes An unordered collection of interventionPrescriptionAppropriateSexes.  Gender(s) for which the intervention prescription is appropriate.
      * @var \Swagger\Client\Model\InterventionPrescriptionAppropriateSex[]
      */
    protected $appropriate_sexes;
    
    /**
      * $diagnoses An unordered collection of interventionPrescriptionDiagnoses.  Targeted purpose of the intervention (e.g., attendance issue, dropout risk).
      * @var \Swagger\Client\Model\InterventionPrescriptionDiagnosis[]
      */
    protected $diagnoses;
    
    /**
      * $education_contents An unordered collection of interventionPrescriptionEducationContents.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
      * @var \Swagger\Client\Model\InterventionPrescriptionEducationContent[]
      */
    protected $education_contents;
    
    /**
      * $learning_resource_metadata_ur_is An unordered collection of interventionPrescriptionLearningResourceMetadataURIs.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
      * @var \Swagger\Client\Model\InterventionPrescriptionLearningResourceMetadataURI[]
      */
    protected $learning_resource_metadata_ur_is;
    
    /**
      * $population_serveds An unordered collection of interventionPrescriptionPopulationServeds.  A subset of students that are the focus of the intervention.
      * @var \Swagger\Client\Model\InterventionPrescriptionPopulationServed[]
      */
    protected $population_serveds;
    
    /**
      * $uris An unordered collection of interventionPrescriptionURIs.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
      * @var \Swagger\Client\Model\InterventionPrescriptionURI[]
      */
    protected $uris;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->education_organization_reference = $data["education_organization_reference"];
            $this->identification_code = $data["identification_code"];
            $this->intervention_class_type = $data["intervention_class_type"];
            $this->delivery_method_type = $data["delivery_method_type"];
            $this->appropriate_grade_levels = $data["appropriate_grade_levels"];
            $this->appropriate_sexes = $data["appropriate_sexes"];
            $this->diagnoses = $data["diagnoses"];
            $this->education_contents = $data["education_contents"];
            $this->learning_resource_metadata_ur_is = $data["learning_resource_metadata_ur_is"];
            $this->population_serveds = $data["population_serveds"];
            $this->uris = $data["uris"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets education_organization_reference
     * @return \Swagger\Client\Model\EducationOrganizationReference
     */
    public function getEducationOrganizationReference()
    {
        return $this->education_organization_reference;
    }
  
    /**
     * Sets education_organization_reference
     * @param \Swagger\Client\Model\EducationOrganizationReference $education_organization_reference A reference to the related EducationOrganization resource.
     * @return $this
     */
    public function setEducationOrganizationReference($education_organization_reference)
    {
        
        $this->education_organization_reference = $education_organization_reference;
        return $this;
    }
    
    /**
     * Gets identification_code
     * @return string
     */
    public function getIdentificationCode()
    {
        return $this->identification_code;
    }
  
    /**
     * Sets identification_code
     * @param string $identification_code A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setIdentificationCode($identification_code)
    {
        
        $this->identification_code = $identification_code;
        return $this;
    }
    
    /**
     * Gets intervention_class_type
     * @return string
     */
    public function getInterventionClassType()
    {
        return $this->intervention_class_type;
    }
  
    /**
     * Sets intervention_class_type
     * @param string $intervention_class_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setInterventionClassType($intervention_class_type)
    {
        
        $this->intervention_class_type = $intervention_class_type;
        return $this;
    }
    
    /**
     * Gets delivery_method_type
     * @return string
     */
    public function getDeliveryMethodType()
    {
        return $this->delivery_method_type;
    }
  
    /**
     * Sets delivery_method_type
     * @param string $delivery_method_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setDeliveryMethodType($delivery_method_type)
    {
        
        $this->delivery_method_type = $delivery_method_type;
        return $this;
    }
    
    /**
     * Gets appropriate_grade_levels
     * @return \Swagger\Client\Model\InterventionPrescriptionAppropriateGradeLevel[]
     */
    public function getAppropriateGradeLevels()
    {
        return $this->appropriate_grade_levels;
    }
  
    /**
     * Sets appropriate_grade_levels
     * @param \Swagger\Client\Model\InterventionPrescriptionAppropriateGradeLevel[] $appropriate_grade_levels An unordered collection of interventionPrescriptionAppropriateGradeLevels.  Grade levels for the prescribed intervention-if omitted, considered generally applicable.
     * @return $this
     */
    public function setAppropriateGradeLevels($appropriate_grade_levels)
    {
        
        $this->appropriate_grade_levels = $appropriate_grade_levels;
        return $this;
    }
    
    /**
     * Gets appropriate_sexes
     * @return \Swagger\Client\Model\InterventionPrescriptionAppropriateSex[]
     */
    public function getAppropriateSexes()
    {
        return $this->appropriate_sexes;
    }
  
    /**
     * Sets appropriate_sexes
     * @param \Swagger\Client\Model\InterventionPrescriptionAppropriateSex[] $appropriate_sexes An unordered collection of interventionPrescriptionAppropriateSexes.  Gender(s) for which the intervention prescription is appropriate.
     * @return $this
     */
    public function setAppropriateSexes($appropriate_sexes)
    {
        
        $this->appropriate_sexes = $appropriate_sexes;
        return $this;
    }
    
    /**
     * Gets diagnoses
     * @return \Swagger\Client\Model\InterventionPrescriptionDiagnosis[]
     */
    public function getDiagnoses()
    {
        return $this->diagnoses;
    }
  
    /**
     * Sets diagnoses
     * @param \Swagger\Client\Model\InterventionPrescriptionDiagnosis[] $diagnoses An unordered collection of interventionPrescriptionDiagnoses.  Targeted purpose of the intervention (e.g., attendance issue, dropout risk).
     * @return $this
     */
    public function setDiagnoses($diagnoses)
    {
        
        $this->diagnoses = $diagnoses;
        return $this;
    }
    
    /**
     * Gets education_contents
     * @return \Swagger\Client\Model\InterventionPrescriptionEducationContent[]
     */
    public function getEducationContents()
    {
        return $this->education_contents;
    }
  
    /**
     * Sets education_contents
     * @param \Swagger\Client\Model\InterventionPrescriptionEducationContent[] $education_contents An unordered collection of interventionPrescriptionEducationContents.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
     * @return $this
     */
    public function setEducationContents($education_contents)
    {
        
        $this->education_contents = $education_contents;
        return $this;
    }
    
    /**
     * Gets learning_resource_metadata_ur_is
     * @return \Swagger\Client\Model\InterventionPrescriptionLearningResourceMetadataURI[]
     */
    public function getLearningResourceMetadataUrIs()
    {
        return $this->learning_resource_metadata_ur_is;
    }
  
    /**
     * Sets learning_resource_metadata_ur_is
     * @param \Swagger\Client\Model\InterventionPrescriptionLearningResourceMetadataURI[] $learning_resource_metadata_ur_is An unordered collection of interventionPrescriptionLearningResourceMetadataURIs.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
     * @return $this
     */
    public function setLearningResourceMetadataUrIs($learning_resource_metadata_ur_is)
    {
        
        $this->learning_resource_metadata_ur_is = $learning_resource_metadata_ur_is;
        return $this;
    }
    
    /**
     * Gets population_serveds
     * @return \Swagger\Client\Model\InterventionPrescriptionPopulationServed[]
     */
    public function getPopulationServeds()
    {
        return $this->population_serveds;
    }
  
    /**
     * Sets population_serveds
     * @param \Swagger\Client\Model\InterventionPrescriptionPopulationServed[] $population_serveds An unordered collection of interventionPrescriptionPopulationServeds.  A subset of students that are the focus of the intervention.
     * @return $this
     */
    public function setPopulationServeds($population_serveds)
    {
        
        $this->population_serveds = $population_serveds;
        return $this;
    }
    
    /**
     * Gets uris
     * @return \Swagger\Client\Model\InterventionPrescriptionURI[]
     */
    public function getUris()
    {
        return $this->uris;
    }
  
    /**
     * Sets uris
     * @param \Swagger\Client\Model\InterventionPrescriptionURI[] $uris An unordered collection of interventionPrescriptionURIs.  Resources related to or used in this intervention prescription, including any documentation around the intervention prescription itself. Since an intervention prescription is intended to be a published intervention, an intervention prescription should have at least one such resource.
     * @return $this
     */
    public function setUris($uris)
    {
        
        $this->uris = $uris;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
