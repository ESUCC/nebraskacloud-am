<?php
/**
 * Session
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Session Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Session implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'school_reference' => '\Swagger\Client\Model\SchoolReference',
        'school_year_type_reference' => '\Swagger\Client\Model\SchoolYearTypeReference',
        'term_descriptor' => 'string',
        'name' => 'string',
        'begin_date' => '\\DateTime',
        'end_date' => '\\DateTime',
        'total_instructional_days' => 'int',
        'academic_weeks' => '\Swagger\Client\Model\SessionAcademicWeek[]',
        'grading_periods' => '\Swagger\Client\Model\SessionGradingPeriod[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'school_reference' => 'schoolReference',
        'school_year_type_reference' => 'schoolYearTypeReference',
        'term_descriptor' => 'termDescriptor',
        'name' => 'name',
        'begin_date' => 'beginDate',
        'end_date' => 'endDate',
        'total_instructional_days' => 'totalInstructionalDays',
        'academic_weeks' => 'academicWeeks',
        'grading_periods' => 'gradingPeriods',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'school_reference' => 'setSchoolReference',
        'school_year_type_reference' => 'setSchoolYearTypeReference',
        'term_descriptor' => 'setTermDescriptor',
        'name' => 'setName',
        'begin_date' => 'setBeginDate',
        'end_date' => 'setEndDate',
        'total_instructional_days' => 'setTotalInstructionalDays',
        'academic_weeks' => 'setAcademicWeeks',
        'grading_periods' => 'setGradingPeriods',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'school_reference' => 'getSchoolReference',
        'school_year_type_reference' => 'getSchoolYearTypeReference',
        'term_descriptor' => 'getTermDescriptor',
        'name' => 'getName',
        'begin_date' => 'getBeginDate',
        'end_date' => 'getEndDate',
        'total_instructional_days' => 'getTotalInstructionalDays',
        'academic_weeks' => 'getAcademicWeeks',
        'grading_periods' => 'getGradingPeriods',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $school_reference A reference to the related School resource.
      * @var \Swagger\Client\Model\SchoolReference
      */
    protected $school_reference;
    
    /**
      * $school_year_type_reference A reference to the related SchoolYearType resource.
      * @var \Swagger\Client\Model\SchoolYearTypeReference
      */
    protected $school_year_type_reference;
    
    /**
      * $term_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $term_descriptor;
    
    /**
      * $name The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).  NEDM: Session Type
      * @var string
      */
    protected $name;
    
    /**
      * $begin_date Month, day, and year of the first day of the Session.
      * @var \\DateTime
      */
    protected $begin_date;
    
    /**
      * $end_date Month, day, and year of the last day of the Session.
      * @var \\DateTime
      */
    protected $end_date;
    
    /**
      * $total_instructional_days The total number of instructional days in the school calendar.
      * @var int
      */
    protected $total_instructional_days;
    
    /**
      * $academic_weeks An unordered collection of sessionAcademicWeeks.  
      * @var \Swagger\Client\Model\SessionAcademicWeek[]
      */
    protected $academic_weeks;
    
    /**
      * $grading_periods An unordered collection of sessionGradingPeriods.  Grading periods associated with the session calendar.
      * @var \Swagger\Client\Model\SessionGradingPeriod[]
      */
    protected $grading_periods;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->school_reference = $data["school_reference"];
            $this->school_year_type_reference = $data["school_year_type_reference"];
            $this->term_descriptor = $data["term_descriptor"];
            $this->name = $data["name"];
            $this->begin_date = $data["begin_date"];
            $this->end_date = $data["end_date"];
            $this->total_instructional_days = $data["total_instructional_days"];
            $this->academic_weeks = $data["academic_weeks"];
            $this->grading_periods = $data["grading_periods"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets school_reference
     * @return \Swagger\Client\Model\SchoolReference
     */
    public function getSchoolReference()
    {
        return $this->school_reference;
    }
  
    /**
     * Sets school_reference
     * @param \Swagger\Client\Model\SchoolReference $school_reference A reference to the related School resource.
     * @return $this
     */
    public function setSchoolReference($school_reference)
    {
        
        $this->school_reference = $school_reference;
        return $this;
    }
    
    /**
     * Gets school_year_type_reference
     * @return \Swagger\Client\Model\SchoolYearTypeReference
     */
    public function getSchoolYearTypeReference()
    {
        return $this->school_year_type_reference;
    }
  
    /**
     * Sets school_year_type_reference
     * @param \Swagger\Client\Model\SchoolYearTypeReference $school_year_type_reference A reference to the related SchoolYearType resource.
     * @return $this
     */
    public function setSchoolYearTypeReference($school_year_type_reference)
    {
        
        $this->school_year_type_reference = $school_year_type_reference;
        return $this;
    }
    
    /**
     * Gets term_descriptor
     * @return string
     */
    public function getTermDescriptor()
    {
        return $this->term_descriptor;
    }
  
    /**
     * Sets term_descriptor
     * @param string $term_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setTermDescriptor($term_descriptor)
    {
        
        $this->term_descriptor = $term_descriptor;
        return $this;
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name The identifier for the calendar for the academic session (e.g., 2010/11, 2011 Summer).  NEDM: Session Type
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets begin_date
     * @return \\DateTime
     */
    public function getBeginDate()
    {
        return $this->begin_date;
    }
  
    /**
     * Sets begin_date
     * @param \\DateTime $begin_date Month, day, and year of the first day of the Session.
     * @return $this
     */
    public function setBeginDate($begin_date)
    {
        
        $this->begin_date = $begin_date;
        return $this;
    }
    
    /**
     * Gets end_date
     * @return \\DateTime
     */
    public function getEndDate()
    {
        return $this->end_date;
    }
  
    /**
     * Sets end_date
     * @param \\DateTime $end_date Month, day, and year of the last day of the Session.
     * @return $this
     */
    public function setEndDate($end_date)
    {
        
        $this->end_date = $end_date;
        return $this;
    }
    
    /**
     * Gets total_instructional_days
     * @return int
     */
    public function getTotalInstructionalDays()
    {
        return $this->total_instructional_days;
    }
  
    /**
     * Sets total_instructional_days
     * @param int $total_instructional_days The total number of instructional days in the school calendar.
     * @return $this
     */
    public function setTotalInstructionalDays($total_instructional_days)
    {
        
        $this->total_instructional_days = $total_instructional_days;
        return $this;
    }
    
    /**
     * Gets academic_weeks
     * @return \Swagger\Client\Model\SessionAcademicWeek[]
     */
    public function getAcademicWeeks()
    {
        return $this->academic_weeks;
    }
  
    /**
     * Sets academic_weeks
     * @param \Swagger\Client\Model\SessionAcademicWeek[] $academic_weeks An unordered collection of sessionAcademicWeeks.  
     * @return $this
     */
    public function setAcademicWeeks($academic_weeks)
    {
        
        $this->academic_weeks = $academic_weeks;
        return $this;
    }
    
    /**
     * Gets grading_periods
     * @return \Swagger\Client\Model\SessionGradingPeriod[]
     */
    public function getGradingPeriods()
    {
        return $this->grading_periods;
    }
  
    /**
     * Sets grading_periods
     * @param \Swagger\Client\Model\SessionGradingPeriod[] $grading_periods An unordered collection of sessionGradingPeriods.  Grading periods associated with the session calendar.
     * @return $this
     */
    public function setGradingPeriods($grading_periods)
    {
        
        $this->grading_periods = $grading_periods;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
