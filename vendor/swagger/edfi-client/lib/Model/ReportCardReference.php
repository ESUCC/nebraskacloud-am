<?php
/**
 * ReportCardReference
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * ReportCardReference Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ReportCardReference implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'student_unique_id' => 'string',
        'education_organization_id' => 'int',
        'grading_period_descriptor' => 'string',
        'grading_period_begin_date' => '\\DateTime',
        'school_id' => 'int',
        'link' => '\Swagger\Client\Model\Link'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'student_unique_id' => 'studentUniqueId',
        'education_organization_id' => 'educationOrganizationId',
        'grading_period_descriptor' => 'gradingPeriodDescriptor',
        'grading_period_begin_date' => 'gradingPeriodBeginDate',
        'school_id' => 'schoolId',
        'link' => 'link'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'student_unique_id' => 'setStudentUniqueId',
        'education_organization_id' => 'setEducationOrganizationId',
        'grading_period_descriptor' => 'setGradingPeriodDescriptor',
        'grading_period_begin_date' => 'setGradingPeriodBeginDate',
        'school_id' => 'setSchoolId',
        'link' => 'setLink'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'student_unique_id' => 'getStudentUniqueId',
        'education_organization_id' => 'getEducationOrganizationId',
        'grading_period_descriptor' => 'getGradingPeriodDescriptor',
        'grading_period_begin_date' => 'getGradingPeriodBeginDate',
        'school_id' => 'getSchoolId',
        'link' => 'getLink'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $student_unique_id A unique alpha-numeric code assigned to a student.
      * @var string
      */
    protected $student_unique_id;
    
    /**
      * $education_organization_id EducationOrganization Identity Column
      * @var int
      */
    protected $education_organization_id;
    
    /**
      * $grading_period_descriptor The name of the grading period during the school year in which the grade is offered (e.g., 1st cycle, 1st semester)
      * @var string
      */
    protected $grading_period_descriptor;
    
    /**
      * $grading_period_begin_date Month, day, and year of the first day of the grading period.
      * @var \\DateTime
      */
    protected $grading_period_begin_date;
    
    /**
      * $school_id School Identity Column
      * @var int
      */
    protected $school_id;
    
    /**
      * $link Represents a hyperlink to the related reportCard resource.
      * @var \Swagger\Client\Model\Link
      */
    protected $link;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->student_unique_id = $data["student_unique_id"];
            $this->education_organization_id = $data["education_organization_id"];
            $this->grading_period_descriptor = $data["grading_period_descriptor"];
            $this->grading_period_begin_date = $data["grading_period_begin_date"];
            $this->school_id = $data["school_id"];
            $this->link = $data["link"];
        }
    }
    
    /**
     * Gets student_unique_id
     * @return string
     */
    public function getStudentUniqueId()
    {
        return $this->student_unique_id;
    }
  
    /**
     * Sets student_unique_id
     * @param string $student_unique_id A unique alpha-numeric code assigned to a student.
     * @return $this
     */
    public function setStudentUniqueId($student_unique_id)
    {
        
        $this->student_unique_id = $student_unique_id;
        return $this;
    }
    
    /**
     * Gets education_organization_id
     * @return int
     */
    public function getEducationOrganizationId()
    {
        return $this->education_organization_id;
    }
  
    /**
     * Sets education_organization_id
     * @param int $education_organization_id EducationOrganization Identity Column
     * @return $this
     */
    public function setEducationOrganizationId($education_organization_id)
    {
        
        $this->education_organization_id = $education_organization_id;
        return $this;
    }
    
    /**
     * Gets grading_period_descriptor
     * @return string
     */
    public function getGradingPeriodDescriptor()
    {
        return $this->grading_period_descriptor;
    }
  
    /**
     * Sets grading_period_descriptor
     * @param string $grading_period_descriptor The name of the grading period during the school year in which the grade is offered (e.g., 1st cycle, 1st semester)
     * @return $this
     */
    public function setGradingPeriodDescriptor($grading_period_descriptor)
    {
        
        $this->grading_period_descriptor = $grading_period_descriptor;
        return $this;
    }
    
    /**
     * Gets grading_period_begin_date
     * @return \\DateTime
     */
    public function getGradingPeriodBeginDate()
    {
        return $this->grading_period_begin_date;
    }
  
    /**
     * Sets grading_period_begin_date
     * @param \\DateTime $grading_period_begin_date Month, day, and year of the first day of the grading period.
     * @return $this
     */
    public function setGradingPeriodBeginDate($grading_period_begin_date)
    {
        
        $this->grading_period_begin_date = $grading_period_begin_date;
        return $this;
    }
    
    /**
     * Gets school_id
     * @return int
     */
    public function getSchoolId()
    {
        return $this->school_id;
    }
  
    /**
     * Sets school_id
     * @param int $school_id School Identity Column
     * @return $this
     */
    public function setSchoolId($school_id)
    {
        
        $this->school_id = $school_id;
        return $this;
    }
    
    /**
     * Gets link
     * @return \Swagger\Client\Model\Link
     */
    public function getLink()
    {
        return $this->link;
    }
  
    /**
     * Sets link
     * @param \Swagger\Client\Model\Link $link Represents a hyperlink to the related reportCard resource.
     * @return $this
     */
    public function setLink($link)
    {
        
        $this->link = $link;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
