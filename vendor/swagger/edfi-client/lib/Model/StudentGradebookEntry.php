<?php
/**
 * StudentGradebookEntry
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * StudentGradebookEntry Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class StudentGradebookEntry implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'gradebook_entry_reference' => '\Swagger\Client\Model\GradebookEntryReference',
        'student_section_association_reference' => '\Swagger\Client\Model\StudentSectionAssociationReference',
        'date_fulfilled' => '\\DateTime',
        'letter_grade_earned' => 'string',
        'numeric_grade_earned' => 'Number',
        'competency_level_descriptor' => 'string',
        'diagnostic_statement' => 'string',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'gradebook_entry_reference' => 'gradebookEntryReference',
        'student_section_association_reference' => 'studentSectionAssociationReference',
        'date_fulfilled' => 'dateFulfilled',
        'letter_grade_earned' => 'letterGradeEarned',
        'numeric_grade_earned' => 'numericGradeEarned',
        'competency_level_descriptor' => 'competencyLevelDescriptor',
        'diagnostic_statement' => 'diagnosticStatement',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'gradebook_entry_reference' => 'setGradebookEntryReference',
        'student_section_association_reference' => 'setStudentSectionAssociationReference',
        'date_fulfilled' => 'setDateFulfilled',
        'letter_grade_earned' => 'setLetterGradeEarned',
        'numeric_grade_earned' => 'setNumericGradeEarned',
        'competency_level_descriptor' => 'setCompetencyLevelDescriptor',
        'diagnostic_statement' => 'setDiagnosticStatement',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'gradebook_entry_reference' => 'getGradebookEntryReference',
        'student_section_association_reference' => 'getStudentSectionAssociationReference',
        'date_fulfilled' => 'getDateFulfilled',
        'letter_grade_earned' => 'getLetterGradeEarned',
        'numeric_grade_earned' => 'getNumericGradeEarned',
        'competency_level_descriptor' => 'getCompetencyLevelDescriptor',
        'diagnostic_statement' => 'getDiagnosticStatement',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $gradebook_entry_reference A reference to the related GradebookEntry resource.
      * @var \Swagger\Client\Model\GradebookEntryReference
      */
    protected $gradebook_entry_reference;
    
    /**
      * $student_section_association_reference A reference to the related StudentSectionAssociation resource.
      * @var \Swagger\Client\Model\StudentSectionAssociationReference
      */
    protected $student_section_association_reference;
    
    /**
      * $date_fulfilled The date an assignment was turned in or the date of an assessment.
      * @var \\DateTime
      */
    protected $date_fulfilled;
    
    /**
      * $letter_grade_earned A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
      * @var string
      */
    protected $letter_grade_earned;
    
    /**
      * $numeric_grade_earned A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
      * @var Number
      */
    protected $numeric_grade_earned;
    
    /**
      * $competency_level_descriptor The competency level assessed for the student for the referenced learning objective.
      * @var string
      */
    protected $competency_level_descriptor;
    
    /**
      * $diagnostic_statement A statement provided by the teacher that provides information in addition to the grade or assessment score.
      * @var string
      */
    protected $diagnostic_statement;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->gradebook_entry_reference = $data["gradebook_entry_reference"];
            $this->student_section_association_reference = $data["student_section_association_reference"];
            $this->date_fulfilled = $data["date_fulfilled"];
            $this->letter_grade_earned = $data["letter_grade_earned"];
            $this->numeric_grade_earned = $data["numeric_grade_earned"];
            $this->competency_level_descriptor = $data["competency_level_descriptor"];
            $this->diagnostic_statement = $data["diagnostic_statement"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets gradebook_entry_reference
     * @return \Swagger\Client\Model\GradebookEntryReference
     */
    public function getGradebookEntryReference()
    {
        return $this->gradebook_entry_reference;
    }
  
    /**
     * Sets gradebook_entry_reference
     * @param \Swagger\Client\Model\GradebookEntryReference $gradebook_entry_reference A reference to the related GradebookEntry resource.
     * @return $this
     */
    public function setGradebookEntryReference($gradebook_entry_reference)
    {
        
        $this->gradebook_entry_reference = $gradebook_entry_reference;
        return $this;
    }
    
    /**
     * Gets student_section_association_reference
     * @return \Swagger\Client\Model\StudentSectionAssociationReference
     */
    public function getStudentSectionAssociationReference()
    {
        return $this->student_section_association_reference;
    }
  
    /**
     * Sets student_section_association_reference
     * @param \Swagger\Client\Model\StudentSectionAssociationReference $student_section_association_reference A reference to the related StudentSectionAssociation resource.
     * @return $this
     */
    public function setStudentSectionAssociationReference($student_section_association_reference)
    {
        
        $this->student_section_association_reference = $student_section_association_reference;
        return $this;
    }
    
    /**
     * Gets date_fulfilled
     * @return \\DateTime
     */
    public function getDateFulfilled()
    {
        return $this->date_fulfilled;
    }
  
    /**
     * Sets date_fulfilled
     * @param \\DateTime $date_fulfilled The date an assignment was turned in or the date of an assessment.
     * @return $this
     */
    public function setDateFulfilled($date_fulfilled)
    {
        
        $this->date_fulfilled = $date_fulfilled;
        return $this;
    }
    
    /**
     * Gets letter_grade_earned
     * @return string
     */
    public function getLetterGradeEarned()
    {
        return $this->letter_grade_earned;
    }
  
    /**
     * Sets letter_grade_earned
     * @param string $letter_grade_earned A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
     * @return $this
     */
    public function setLetterGradeEarned($letter_grade_earned)
    {
        
        $this->letter_grade_earned = $letter_grade_earned;
        return $this;
    }
    
    /**
     * Gets numeric_grade_earned
     * @return Number
     */
    public function getNumericGradeEarned()
    {
        return $this->numeric_grade_earned;
    }
  
    /**
     * Sets numeric_grade_earned
     * @param Number $numeric_grade_earned A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.
     * @return $this
     */
    public function setNumericGradeEarned($numeric_grade_earned)
    {
        
        $this->numeric_grade_earned = $numeric_grade_earned;
        return $this;
    }
    
    /**
     * Gets competency_level_descriptor
     * @return string
     */
    public function getCompetencyLevelDescriptor()
    {
        return $this->competency_level_descriptor;
    }
  
    /**
     * Sets competency_level_descriptor
     * @param string $competency_level_descriptor The competency level assessed for the student for the referenced learning objective.
     * @return $this
     */
    public function setCompetencyLevelDescriptor($competency_level_descriptor)
    {
        
        $this->competency_level_descriptor = $competency_level_descriptor;
        return $this;
    }
    
    /**
     * Gets diagnostic_statement
     * @return string
     */
    public function getDiagnosticStatement()
    {
        return $this->diagnostic_statement;
    }
  
    /**
     * Sets diagnostic_statement
     * @param string $diagnostic_statement A statement provided by the teacher that provides information in addition to the grade or assessment score.
     * @return $this
     */
    public function setDiagnosticStatement($diagnostic_statement)
    {
        
        $this->diagnostic_statement = $diagnostic_statement;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
