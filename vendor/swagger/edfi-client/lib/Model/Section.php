<?php
/**
 * Section
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Section Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Section implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'class_period_reference' => '\Swagger\Client\Model\ClassPeriodReference',
        'course_offering_reference' => '\Swagger\Client\Model\CourseOfferingReference',
        'location_reference' => '\Swagger\Client\Model\LocationReference',
        'school_reference' => '\Swagger\Client\Model\SchoolReference',
        'unique_section_code' => 'string',
        'sequence_of_course' => 'int',
        'educational_environment_type' => 'string',
        'medium_of_instruction_type' => 'string',
        'population_served_type' => 'string',
        'available_credit_type' => 'string',
        'available_credit_conversion' => 'Number',
        'instruction_language_descriptor' => 'string',
        'available_credits' => 'Number',
        'characteristics' => '\Swagger\Client\Model\SectionCharacteristic[]',
        'programs' => '\Swagger\Client\Model\SectionProgram[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'class_period_reference' => 'classPeriodReference',
        'course_offering_reference' => 'courseOfferingReference',
        'location_reference' => 'locationReference',
        'school_reference' => 'schoolReference',
        'unique_section_code' => 'uniqueSectionCode',
        'sequence_of_course' => 'sequenceOfCourse',
        'educational_environment_type' => 'educationalEnvironmentType',
        'medium_of_instruction_type' => 'mediumOfInstructionType',
        'population_served_type' => 'populationServedType',
        'available_credit_type' => 'availableCreditType',
        'available_credit_conversion' => 'availableCreditConversion',
        'instruction_language_descriptor' => 'instructionLanguageDescriptor',
        'available_credits' => 'availableCredits',
        'characteristics' => 'characteristics',
        'programs' => 'programs',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'class_period_reference' => 'setClassPeriodReference',
        'course_offering_reference' => 'setCourseOfferingReference',
        'location_reference' => 'setLocationReference',
        'school_reference' => 'setSchoolReference',
        'unique_section_code' => 'setUniqueSectionCode',
        'sequence_of_course' => 'setSequenceOfCourse',
        'educational_environment_type' => 'setEducationalEnvironmentType',
        'medium_of_instruction_type' => 'setMediumOfInstructionType',
        'population_served_type' => 'setPopulationServedType',
        'available_credit_type' => 'setAvailableCreditType',
        'available_credit_conversion' => 'setAvailableCreditConversion',
        'instruction_language_descriptor' => 'setInstructionLanguageDescriptor',
        'available_credits' => 'setAvailableCredits',
        'characteristics' => 'setCharacteristics',
        'programs' => 'setPrograms',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'class_period_reference' => 'getClassPeriodReference',
        'course_offering_reference' => 'getCourseOfferingReference',
        'location_reference' => 'getLocationReference',
        'school_reference' => 'getSchoolReference',
        'unique_section_code' => 'getUniqueSectionCode',
        'sequence_of_course' => 'getSequenceOfCourse',
        'educational_environment_type' => 'getEducationalEnvironmentType',
        'medium_of_instruction_type' => 'getMediumOfInstructionType',
        'population_served_type' => 'getPopulationServedType',
        'available_credit_type' => 'getAvailableCreditType',
        'available_credit_conversion' => 'getAvailableCreditConversion',
        'instruction_language_descriptor' => 'getInstructionLanguageDescriptor',
        'available_credits' => 'getAvailableCredits',
        'characteristics' => 'getCharacteristics',
        'programs' => 'getPrograms',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $class_period_reference A reference to the related ClassPeriod resource.
      * @var \Swagger\Client\Model\ClassPeriodReference
      */
    protected $class_period_reference;
    
    /**
      * $course_offering_reference A reference to the related CourseOffering resource.
      * @var \Swagger\Client\Model\CourseOfferingReference
      */
    protected $course_offering_reference;
    
    /**
      * $location_reference A reference to the related Location resource.
      * @var \Swagger\Client\Model\LocationReference
      */
    protected $location_reference;
    
    /**
      * $school_reference A reference to the related School resource.
      * @var \Swagger\Client\Model\SchoolReference
      */
    protected $school_reference;
    
    /**
      * $unique_section_code A unique identifier for the Section, that is defined by the classroom, the subjects taught, and the instructors that are assigned.
      * @var string
      */
    protected $unique_section_code;
    
    /**
      * $sequence_of_course When a Section is part of a sequence of parts for a course, the number if the sequence. If the course has only one part, the value of this Section attribute should be 1.
      * @var int
      */
    protected $sequence_of_course;
    
    /**
      * $educational_environment_type The setting in which a child receives education and related services; for example:  Center-based instruction  Home-based instruction  Hospital class  Mainstream  Residential care and treatment facility  ....
      * @var string
      */
    protected $educational_environment_type;
    
    /**
      * $medium_of_instruction_type The media through which teachers provide instruction to students and students and teachers communicate about instructional matters; for example:  Technology-based instruction in classroom  Correspondence instruction  Face-to-face instruction  Virtual/On-line Distance learning  Center-based instruction  ...
      * @var string
      */
    protected $medium_of_instruction_type;
    
    /**
      * $population_served_type The population for which the course was designed; for example:  Bilingual students  Remedial education students  Gifted and talented students  Career and Technical Education students  Special education students  ....
      * @var string
      */
    protected $population_served_type;
    
    /**
      * $available_credit_type The type of credits or units of value awarded for the completion of a course.
      * @var string
      */
    protected $available_credit_type;
    
    /**
      * $available_credit_conversion Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
      * @var Number
      */
    protected $available_credit_conversion;
    
    /**
      * $instruction_language_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $instruction_language_descriptor;
    
    /**
      * $available_credits Credits or units of value awarded for the completion of a course.
      * @var Number
      */
    protected $available_credits;
    
    /**
      * $characteristics An unordered collection of sectionCharacteristics.  Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.
      * @var \Swagger\Client\Model\SectionCharacteristic[]
      */
    protected $characteristics;
    
    /**
      * $programs An unordered collection of sectionPrograms.  Optional reference to program (e.g., CTE) to which the section is associated.
      * @var \Swagger\Client\Model\SectionProgram[]
      */
    protected $programs;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->class_period_reference = $data["class_period_reference"];
            $this->course_offering_reference = $data["course_offering_reference"];
            $this->location_reference = $data["location_reference"];
            $this->school_reference = $data["school_reference"];
            $this->unique_section_code = $data["unique_section_code"];
            $this->sequence_of_course = $data["sequence_of_course"];
            $this->educational_environment_type = $data["educational_environment_type"];
            $this->medium_of_instruction_type = $data["medium_of_instruction_type"];
            $this->population_served_type = $data["population_served_type"];
            $this->available_credit_type = $data["available_credit_type"];
            $this->available_credit_conversion = $data["available_credit_conversion"];
            $this->instruction_language_descriptor = $data["instruction_language_descriptor"];
            $this->available_credits = $data["available_credits"];
            $this->characteristics = $data["characteristics"];
            $this->programs = $data["programs"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets class_period_reference
     * @return \Swagger\Client\Model\ClassPeriodReference
     */
    public function getClassPeriodReference()
    {
        return $this->class_period_reference;
    }
  
    /**
     * Sets class_period_reference
     * @param \Swagger\Client\Model\ClassPeriodReference $class_period_reference A reference to the related ClassPeriod resource.
     * @return $this
     */
    public function setClassPeriodReference($class_period_reference)
    {
        
        $this->class_period_reference = $class_period_reference;
        return $this;
    }
    
    /**
     * Gets course_offering_reference
     * @return \Swagger\Client\Model\CourseOfferingReference
     */
    public function getCourseOfferingReference()
    {
        return $this->course_offering_reference;
    }
  
    /**
     * Sets course_offering_reference
     * @param \Swagger\Client\Model\CourseOfferingReference $course_offering_reference A reference to the related CourseOffering resource.
     * @return $this
     */
    public function setCourseOfferingReference($course_offering_reference)
    {
        
        $this->course_offering_reference = $course_offering_reference;
        return $this;
    }
    
    /**
     * Gets location_reference
     * @return \Swagger\Client\Model\LocationReference
     */
    public function getLocationReference()
    {
        return $this->location_reference;
    }
  
    /**
     * Sets location_reference
     * @param \Swagger\Client\Model\LocationReference $location_reference A reference to the related Location resource.
     * @return $this
     */
    public function setLocationReference($location_reference)
    {
        
        $this->location_reference = $location_reference;
        return $this;
    }
    
    /**
     * Gets school_reference
     * @return \Swagger\Client\Model\SchoolReference
     */
    public function getSchoolReference()
    {
        return $this->school_reference;
    }
  
    /**
     * Sets school_reference
     * @param \Swagger\Client\Model\SchoolReference $school_reference A reference to the related School resource.
     * @return $this
     */
    public function setSchoolReference($school_reference)
    {
        
        $this->school_reference = $school_reference;
        return $this;
    }
    
    /**
     * Gets unique_section_code
     * @return string
     */
    public function getUniqueSectionCode()
    {
        return $this->unique_section_code;
    }
  
    /**
     * Sets unique_section_code
     * @param string $unique_section_code A unique identifier for the Section, that is defined by the classroom, the subjects taught, and the instructors that are assigned.
     * @return $this
     */
    public function setUniqueSectionCode($unique_section_code)
    {
        
        $this->unique_section_code = $unique_section_code;
        return $this;
    }
    
    /**
     * Gets sequence_of_course
     * @return int
     */
    public function getSequenceOfCourse()
    {
        return $this->sequence_of_course;
    }
  
    /**
     * Sets sequence_of_course
     * @param int $sequence_of_course When a Section is part of a sequence of parts for a course, the number if the sequence. If the course has only one part, the value of this Section attribute should be 1.
     * @return $this
     */
    public function setSequenceOfCourse($sequence_of_course)
    {
        
        $this->sequence_of_course = $sequence_of_course;
        return $this;
    }
    
    /**
     * Gets educational_environment_type
     * @return string
     */
    public function getEducationalEnvironmentType()
    {
        return $this->educational_environment_type;
    }
  
    /**
     * Sets educational_environment_type
     * @param string $educational_environment_type The setting in which a child receives education and related services; for example:  Center-based instruction  Home-based instruction  Hospital class  Mainstream  Residential care and treatment facility  ....
     * @return $this
     */
    public function setEducationalEnvironmentType($educational_environment_type)
    {
        
        $this->educational_environment_type = $educational_environment_type;
        return $this;
    }
    
    /**
     * Gets medium_of_instruction_type
     * @return string
     */
    public function getMediumOfInstructionType()
    {
        return $this->medium_of_instruction_type;
    }
  
    /**
     * Sets medium_of_instruction_type
     * @param string $medium_of_instruction_type The media through which teachers provide instruction to students and students and teachers communicate about instructional matters; for example:  Technology-based instruction in classroom  Correspondence instruction  Face-to-face instruction  Virtual/On-line Distance learning  Center-based instruction  ...
     * @return $this
     */
    public function setMediumOfInstructionType($medium_of_instruction_type)
    {
        
        $this->medium_of_instruction_type = $medium_of_instruction_type;
        return $this;
    }
    
    /**
     * Gets population_served_type
     * @return string
     */
    public function getPopulationServedType()
    {
        return $this->population_served_type;
    }
  
    /**
     * Sets population_served_type
     * @param string $population_served_type The population for which the course was designed; for example:  Bilingual students  Remedial education students  Gifted and talented students  Career and Technical Education students  Special education students  ....
     * @return $this
     */
    public function setPopulationServedType($population_served_type)
    {
        
        $this->population_served_type = $population_served_type;
        return $this;
    }
    
    /**
     * Gets available_credit_type
     * @return string
     */
    public function getAvailableCreditType()
    {
        return $this->available_credit_type;
    }
  
    /**
     * Sets available_credit_type
     * @param string $available_credit_type The type of credits or units of value awarded for the completion of a course.
     * @return $this
     */
    public function setAvailableCreditType($available_credit_type)
    {
        
        $this->available_credit_type = $available_credit_type;
        return $this;
    }
    
    /**
     * Gets available_credit_conversion
     * @return Number
     */
    public function getAvailableCreditConversion()
    {
        return $this->available_credit_conversion;
    }
  
    /**
     * Sets available_credit_conversion
     * @param Number $available_credit_conversion Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.
     * @return $this
     */
    public function setAvailableCreditConversion($available_credit_conversion)
    {
        
        $this->available_credit_conversion = $available_credit_conversion;
        return $this;
    }
    
    /**
     * Gets instruction_language_descriptor
     * @return string
     */
    public function getInstructionLanguageDescriptor()
    {
        return $this->instruction_language_descriptor;
    }
  
    /**
     * Sets instruction_language_descriptor
     * @param string $instruction_language_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setInstructionLanguageDescriptor($instruction_language_descriptor)
    {
        
        $this->instruction_language_descriptor = $instruction_language_descriptor;
        return $this;
    }
    
    /**
     * Gets available_credits
     * @return Number
     */
    public function getAvailableCredits()
    {
        return $this->available_credits;
    }
  
    /**
     * Sets available_credits
     * @param Number $available_credits Credits or units of value awarded for the completion of a course.
     * @return $this
     */
    public function setAvailableCredits($available_credits)
    {
        
        $this->available_credits = $available_credits;
        return $this;
    }
    
    /**
     * Gets characteristics
     * @return \Swagger\Client\Model\SectionCharacteristic[]
     */
    public function getCharacteristics()
    {
        return $this->characteristics;
    }
  
    /**
     * Sets characteristics
     * @param \Swagger\Client\Model\SectionCharacteristic[] $characteristics An unordered collection of sectionCharacteristics.  Reflects important characteristics of the Section, such as whether or not attendance is taken and the Section is graded.
     * @return $this
     */
    public function setCharacteristics($characteristics)
    {
        
        $this->characteristics = $characteristics;
        return $this;
    }
    
    /**
     * Gets programs
     * @return \Swagger\Client\Model\SectionProgram[]
     */
    public function getPrograms()
    {
        return $this->programs;
    }
  
    /**
     * Sets programs
     * @param \Swagger\Client\Model\SectionProgram[] $programs An unordered collection of sectionPrograms.  Optional reference to program (e.g., CTE) to which the section is associated.
     * @return $this
     */
    public function setPrograms($programs)
    {
        
        $this->programs = $programs;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
