<?php
/**
 * OpenStaffPosition
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * OpenStaffPosition Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OpenStaffPosition implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'education_organization_reference' => '\Swagger\Client\Model\EducationOrganizationReference',
        'employment_status_descriptor' => 'string',
        'staff_classification_descriptor' => 'string',
        'requisition_number' => 'string',
        'date_posted' => '\\DateTime',
        'position_title' => 'string',
        'program_assignment_descriptor' => 'string',
        'date_posting_removed' => '\\DateTime',
        'posting_result_type' => 'string',
        'academic_subjects' => '\Swagger\Client\Model\OpenStaffPositionAcademicSubject[]',
        'instructional_grade_levels' => '\Swagger\Client\Model\OpenStaffPositionInstructionalGradeLevel[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'education_organization_reference' => 'educationOrganizationReference',
        'employment_status_descriptor' => 'employmentStatusDescriptor',
        'staff_classification_descriptor' => 'staffClassificationDescriptor',
        'requisition_number' => 'requisitionNumber',
        'date_posted' => 'datePosted',
        'position_title' => 'positionTitle',
        'program_assignment_descriptor' => 'programAssignmentDescriptor',
        'date_posting_removed' => 'datePostingRemoved',
        'posting_result_type' => 'postingResultType',
        'academic_subjects' => 'academicSubjects',
        'instructional_grade_levels' => 'instructionalGradeLevels',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'education_organization_reference' => 'setEducationOrganizationReference',
        'employment_status_descriptor' => 'setEmploymentStatusDescriptor',
        'staff_classification_descriptor' => 'setStaffClassificationDescriptor',
        'requisition_number' => 'setRequisitionNumber',
        'date_posted' => 'setDatePosted',
        'position_title' => 'setPositionTitle',
        'program_assignment_descriptor' => 'setProgramAssignmentDescriptor',
        'date_posting_removed' => 'setDatePostingRemoved',
        'posting_result_type' => 'setPostingResultType',
        'academic_subjects' => 'setAcademicSubjects',
        'instructional_grade_levels' => 'setInstructionalGradeLevels',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'education_organization_reference' => 'getEducationOrganizationReference',
        'employment_status_descriptor' => 'getEmploymentStatusDescriptor',
        'staff_classification_descriptor' => 'getStaffClassificationDescriptor',
        'requisition_number' => 'getRequisitionNumber',
        'date_posted' => 'getDatePosted',
        'position_title' => 'getPositionTitle',
        'program_assignment_descriptor' => 'getProgramAssignmentDescriptor',
        'date_posting_removed' => 'getDatePostingRemoved',
        'posting_result_type' => 'getPostingResultType',
        'academic_subjects' => 'getAcademicSubjects',
        'instructional_grade_levels' => 'getInstructionalGradeLevels',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $education_organization_reference A reference to the related EducationOrganization resource.
      * @var \Swagger\Client\Model\EducationOrganizationReference
      */
    protected $education_organization_reference;
    
    /**
      * $employment_status_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $employment_status_descriptor;
    
    /**
      * $staff_classification_descriptor The position''s title or rank (e.g., Counselor, teacher, etc)
      * @var string
      */
    protected $staff_classification_descriptor;
    
    /**
      * $requisition_number The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.
      * @var string
      */
    protected $requisition_number;
    
    /**
      * $date_posted Date the OpenStaffPosition was posted.
      * @var \\DateTime
      */
    protected $date_posted;
    
    /**
      * $position_title The descriptive name of an individual's position.
      * @var string
      */
    protected $position_title;
    
    /**
      * $program_assignment_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $program_assignment_descriptor;
    
    /**
      * $date_posting_removed The date the posting was removed or filled.
      * @var \\DateTime
      */
    protected $date_posting_removed;
    
    /**
      * $posting_result_type Indication of whether the position was filled or retired without filling.
      * @var string
      */
    protected $posting_result_type;
    
    /**
      * $academic_subjects An unordered collection of openStaffPositionAcademicSubjects.  The teaching field required for the position: for example: English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.
      * @var \Swagger\Client\Model\OpenStaffPositionAcademicSubject[]
      */
    protected $academic_subjects;
    
    /**
      * $instructional_grade_levels An unordered collection of openStaffPositionInstructionalGradeLevels.  The set of grade levels for which the position's assignment is responsible.
      * @var \Swagger\Client\Model\OpenStaffPositionInstructionalGradeLevel[]
      */
    protected $instructional_grade_levels;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->education_organization_reference = $data["education_organization_reference"];
            $this->employment_status_descriptor = $data["employment_status_descriptor"];
            $this->staff_classification_descriptor = $data["staff_classification_descriptor"];
            $this->requisition_number = $data["requisition_number"];
            $this->date_posted = $data["date_posted"];
            $this->position_title = $data["position_title"];
            $this->program_assignment_descriptor = $data["program_assignment_descriptor"];
            $this->date_posting_removed = $data["date_posting_removed"];
            $this->posting_result_type = $data["posting_result_type"];
            $this->academic_subjects = $data["academic_subjects"];
            $this->instructional_grade_levels = $data["instructional_grade_levels"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets education_organization_reference
     * @return \Swagger\Client\Model\EducationOrganizationReference
     */
    public function getEducationOrganizationReference()
    {
        return $this->education_organization_reference;
    }
  
    /**
     * Sets education_organization_reference
     * @param \Swagger\Client\Model\EducationOrganizationReference $education_organization_reference A reference to the related EducationOrganization resource.
     * @return $this
     */
    public function setEducationOrganizationReference($education_organization_reference)
    {
        
        $this->education_organization_reference = $education_organization_reference;
        return $this;
    }
    
    /**
     * Gets employment_status_descriptor
     * @return string
     */
    public function getEmploymentStatusDescriptor()
    {
        return $this->employment_status_descriptor;
    }
  
    /**
     * Sets employment_status_descriptor
     * @param string $employment_status_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setEmploymentStatusDescriptor($employment_status_descriptor)
    {
        
        $this->employment_status_descriptor = $employment_status_descriptor;
        return $this;
    }
    
    /**
     * Gets staff_classification_descriptor
     * @return string
     */
    public function getStaffClassificationDescriptor()
    {
        return $this->staff_classification_descriptor;
    }
  
    /**
     * Sets staff_classification_descriptor
     * @param string $staff_classification_descriptor The position''s title or rank (e.g., Counselor, teacher, etc)
     * @return $this
     */
    public function setStaffClassificationDescriptor($staff_classification_descriptor)
    {
        
        $this->staff_classification_descriptor = $staff_classification_descriptor;
        return $this;
    }
    
    /**
     * Gets requisition_number
     * @return string
     */
    public function getRequisitionNumber()
    {
        return $this->requisition_number;
    }
  
    /**
     * Sets requisition_number
     * @param string $requisition_number The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.
     * @return $this
     */
    public function setRequisitionNumber($requisition_number)
    {
        
        $this->requisition_number = $requisition_number;
        return $this;
    }
    
    /**
     * Gets date_posted
     * @return \\DateTime
     */
    public function getDatePosted()
    {
        return $this->date_posted;
    }
  
    /**
     * Sets date_posted
     * @param \\DateTime $date_posted Date the OpenStaffPosition was posted.
     * @return $this
     */
    public function setDatePosted($date_posted)
    {
        
        $this->date_posted = $date_posted;
        return $this;
    }
    
    /**
     * Gets position_title
     * @return string
     */
    public function getPositionTitle()
    {
        return $this->position_title;
    }
  
    /**
     * Sets position_title
     * @param string $position_title The descriptive name of an individual's position.
     * @return $this
     */
    public function setPositionTitle($position_title)
    {
        
        $this->position_title = $position_title;
        return $this;
    }
    
    /**
     * Gets program_assignment_descriptor
     * @return string
     */
    public function getProgramAssignmentDescriptor()
    {
        return $this->program_assignment_descriptor;
    }
  
    /**
     * Sets program_assignment_descriptor
     * @param string $program_assignment_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setProgramAssignmentDescriptor($program_assignment_descriptor)
    {
        
        $this->program_assignment_descriptor = $program_assignment_descriptor;
        return $this;
    }
    
    /**
     * Gets date_posting_removed
     * @return \\DateTime
     */
    public function getDatePostingRemoved()
    {
        return $this->date_posting_removed;
    }
  
    /**
     * Sets date_posting_removed
     * @param \\DateTime $date_posting_removed The date the posting was removed or filled.
     * @return $this
     */
    public function setDatePostingRemoved($date_posting_removed)
    {
        
        $this->date_posting_removed = $date_posting_removed;
        return $this;
    }
    
    /**
     * Gets posting_result_type
     * @return string
     */
    public function getPostingResultType()
    {
        return $this->posting_result_type;
    }
  
    /**
     * Sets posting_result_type
     * @param string $posting_result_type Indication of whether the position was filled or retired without filling.
     * @return $this
     */
    public function setPostingResultType($posting_result_type)
    {
        
        $this->posting_result_type = $posting_result_type;
        return $this;
    }
    
    /**
     * Gets academic_subjects
     * @return \Swagger\Client\Model\OpenStaffPositionAcademicSubject[]
     */
    public function getAcademicSubjects()
    {
        return $this->academic_subjects;
    }
  
    /**
     * Sets academic_subjects
     * @param \Swagger\Client\Model\OpenStaffPositionAcademicSubject[] $academic_subjects An unordered collection of openStaffPositionAcademicSubjects.  The teaching field required for the position: for example: English/Language Arts, Reading, Mathematics, Science, Social Sciences, etc.
     * @return $this
     */
    public function setAcademicSubjects($academic_subjects)
    {
        
        $this->academic_subjects = $academic_subjects;
        return $this;
    }
    
    /**
     * Gets instructional_grade_levels
     * @return \Swagger\Client\Model\OpenStaffPositionInstructionalGradeLevel[]
     */
    public function getInstructionalGradeLevels()
    {
        return $this->instructional_grade_levels;
    }
  
    /**
     * Sets instructional_grade_levels
     * @param \Swagger\Client\Model\OpenStaffPositionInstructionalGradeLevel[] $instructional_grade_levels An unordered collection of openStaffPositionInstructionalGradeLevels.  The set of grade levels for which the position's assignment is responsible.
     * @return $this
     */
    public function setInstructionalGradeLevels($instructional_grade_levels)
    {
        
        $this->instructional_grade_levels = $instructional_grade_levels;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
