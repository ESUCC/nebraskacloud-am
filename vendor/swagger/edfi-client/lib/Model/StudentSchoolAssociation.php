<?php
/**
 * StudentSchoolAssociation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * StudentSchoolAssociation Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class StudentSchoolAssociation implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'graduation_plan_reference' => '\Swagger\Client\Model\GraduationPlanReference',
        'school_reference' => '\Swagger\Client\Model\SchoolReference',
        'class_of_school_year_type_reference' => '\Swagger\Client\Model\SchoolYearTypeReference',
        'school_year_type_reference' => '\Swagger\Client\Model\SchoolYearTypeReference',
        'student_reference' => '\Swagger\Client\Model\StudentReference',
        'entry_date' => '\\DateTime',
        'entry_grade_level_descriptor' => 'string',
        'entry_grade_level_reason_type' => 'string',
        'entry_type_descriptor' => 'string',
        'repeat_grade_indicator' => 'bool',
        'school_choice_transfer' => 'bool',
        'exit_withdraw_date' => '\\DateTime',
        'exit_withdraw_type_descriptor' => 'string',
        'residency_status_descriptor' => 'string',
        'primary_school' => 'bool',
        'employed_while_enrolled' => 'bool',
        'education_plans' => '\Swagger\Client\Model\StudentSchoolAssociationEducationPlan[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'graduation_plan_reference' => 'graduationPlanReference',
        'school_reference' => 'schoolReference',
        'class_of_school_year_type_reference' => 'classOfSchoolYearTypeReference',
        'school_year_type_reference' => 'schoolYearTypeReference',
        'student_reference' => 'studentReference',
        'entry_date' => 'entryDate',
        'entry_grade_level_descriptor' => 'entryGradeLevelDescriptor',
        'entry_grade_level_reason_type' => 'entryGradeLevelReasonType',
        'entry_type_descriptor' => 'entryTypeDescriptor',
        'repeat_grade_indicator' => 'repeatGradeIndicator',
        'school_choice_transfer' => 'schoolChoiceTransfer',
        'exit_withdraw_date' => 'exitWithdrawDate',
        'exit_withdraw_type_descriptor' => 'exitWithdrawTypeDescriptor',
        'residency_status_descriptor' => 'residencyStatusDescriptor',
        'primary_school' => 'primarySchool',
        'employed_while_enrolled' => 'employedWhileEnrolled',
        'education_plans' => 'educationPlans',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'graduation_plan_reference' => 'setGraduationPlanReference',
        'school_reference' => 'setSchoolReference',
        'class_of_school_year_type_reference' => 'setClassOfSchoolYearTypeReference',
        'school_year_type_reference' => 'setSchoolYearTypeReference',
        'student_reference' => 'setStudentReference',
        'entry_date' => 'setEntryDate',
        'entry_grade_level_descriptor' => 'setEntryGradeLevelDescriptor',
        'entry_grade_level_reason_type' => 'setEntryGradeLevelReasonType',
        'entry_type_descriptor' => 'setEntryTypeDescriptor',
        'repeat_grade_indicator' => 'setRepeatGradeIndicator',
        'school_choice_transfer' => 'setSchoolChoiceTransfer',
        'exit_withdraw_date' => 'setExitWithdrawDate',
        'exit_withdraw_type_descriptor' => 'setExitWithdrawTypeDescriptor',
        'residency_status_descriptor' => 'setResidencyStatusDescriptor',
        'primary_school' => 'setPrimarySchool',
        'employed_while_enrolled' => 'setEmployedWhileEnrolled',
        'education_plans' => 'setEducationPlans',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'graduation_plan_reference' => 'getGraduationPlanReference',
        'school_reference' => 'getSchoolReference',
        'class_of_school_year_type_reference' => 'getClassOfSchoolYearTypeReference',
        'school_year_type_reference' => 'getSchoolYearTypeReference',
        'student_reference' => 'getStudentReference',
        'entry_date' => 'getEntryDate',
        'entry_grade_level_descriptor' => 'getEntryGradeLevelDescriptor',
        'entry_grade_level_reason_type' => 'getEntryGradeLevelReasonType',
        'entry_type_descriptor' => 'getEntryTypeDescriptor',
        'repeat_grade_indicator' => 'getRepeatGradeIndicator',
        'school_choice_transfer' => 'getSchoolChoiceTransfer',
        'exit_withdraw_date' => 'getExitWithdrawDate',
        'exit_withdraw_type_descriptor' => 'getExitWithdrawTypeDescriptor',
        'residency_status_descriptor' => 'getResidencyStatusDescriptor',
        'primary_school' => 'getPrimarySchool',
        'employed_while_enrolled' => 'getEmployedWhileEnrolled',
        'education_plans' => 'getEducationPlans',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $graduation_plan_reference A reference to the related GraduationPlan resource.
      * @var \Swagger\Client\Model\GraduationPlanReference
      */
    protected $graduation_plan_reference;
    
    /**
      * $school_reference A reference to the related School resource.
      * @var \Swagger\Client\Model\SchoolReference
      */
    protected $school_reference;
    
    /**
      * $class_of_school_year_type_reference A reference to the related SchoolYearType resource.
      * @var \Swagger\Client\Model\SchoolYearTypeReference
      */
    protected $class_of_school_year_type_reference;
    
    /**
      * $school_year_type_reference A reference to the related SchoolYearType resource.
      * @var \Swagger\Client\Model\SchoolYearTypeReference
      */
    protected $school_year_type_reference;
    
    /**
      * $student_reference A reference to the related Student resource.
      * @var \Swagger\Client\Model\StudentReference
      */
    protected $student_reference;
    
    /**
      * $entry_date The month, day, and year on which an individual enters and begins to receive instructional services in a school.
      * @var \\DateTime
      */
    protected $entry_date;
    
    /**
      * $entry_grade_level_descriptor The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.
      * @var string
      */
    protected $entry_grade_level_descriptor;
    
    /**
      * $entry_grade_level_reason_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $entry_grade_level_reason_type;
    
    /**
      * $entry_type_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $entry_type_descriptor;
    
    /**
      * $repeat_grade_indicator An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.
      * @var bool
      */
    protected $repeat_grade_indicator;
    
    /**
      * $school_choice_transfer An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.
      * @var bool
      */
    protected $school_choice_transfer;
    
    /**
      * $exit_withdraw_date The month, day, and year of the first day after the date of an individual's last attendance at a school (if known), the day on which an individual graduated, or the date on which it becomes known officially that an individual left school.
      * @var \\DateTime
      */
    protected $exit_withdraw_date;
    
    /**
      * $exit_withdraw_type_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $exit_withdraw_type_descriptor;
    
    /**
      * $residency_status_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $residency_status_descriptor;
    
    /**
      * $primary_school Indicates if a given enrollment record should be considered the primary record for a student. If omitted, the default is true.
      * @var bool
      */
    protected $primary_school;
    
    /**
      * $employed_while_enrolled An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.
      * @var bool
      */
    protected $employed_while_enrolled;
    
    /**
      * $education_plans An unordered collection of studentSchoolAssociationEducationPlans.  Indicates the type of Education Plan(s) the student is following, if appropriate; for example: Special Education IEP or Vocational/CTE, etc.
      * @var \Swagger\Client\Model\StudentSchoolAssociationEducationPlan[]
      */
    protected $education_plans;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->graduation_plan_reference = $data["graduation_plan_reference"];
            $this->school_reference = $data["school_reference"];
            $this->class_of_school_year_type_reference = $data["class_of_school_year_type_reference"];
            $this->school_year_type_reference = $data["school_year_type_reference"];
            $this->student_reference = $data["student_reference"];
            $this->entry_date = $data["entry_date"];
            $this->entry_grade_level_descriptor = $data["entry_grade_level_descriptor"];
            $this->entry_grade_level_reason_type = $data["entry_grade_level_reason_type"];
            $this->entry_type_descriptor = $data["entry_type_descriptor"];
            $this->repeat_grade_indicator = $data["repeat_grade_indicator"];
            $this->school_choice_transfer = $data["school_choice_transfer"];
            $this->exit_withdraw_date = $data["exit_withdraw_date"];
            $this->exit_withdraw_type_descriptor = $data["exit_withdraw_type_descriptor"];
            $this->residency_status_descriptor = $data["residency_status_descriptor"];
            $this->primary_school = $data["primary_school"];
            $this->employed_while_enrolled = $data["employed_while_enrolled"];
            $this->education_plans = $data["education_plans"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets graduation_plan_reference
     * @return \Swagger\Client\Model\GraduationPlanReference
     */
    public function getGraduationPlanReference()
    {
        return $this->graduation_plan_reference;
    }
  
    /**
     * Sets graduation_plan_reference
     * @param \Swagger\Client\Model\GraduationPlanReference $graduation_plan_reference A reference to the related GraduationPlan resource.
     * @return $this
     */
    public function setGraduationPlanReference($graduation_plan_reference)
    {
        
        $this->graduation_plan_reference = $graduation_plan_reference;
        return $this;
    }
    
    /**
     * Gets school_reference
     * @return \Swagger\Client\Model\SchoolReference
     */
    public function getSchoolReference()
    {
        return $this->school_reference;
    }
  
    /**
     * Sets school_reference
     * @param \Swagger\Client\Model\SchoolReference $school_reference A reference to the related School resource.
     * @return $this
     */
    public function setSchoolReference($school_reference)
    {
        
        $this->school_reference = $school_reference;
        return $this;
    }
    
    /**
     * Gets class_of_school_year_type_reference
     * @return \Swagger\Client\Model\SchoolYearTypeReference
     */
    public function getClassOfSchoolYearTypeReference()
    {
        return $this->class_of_school_year_type_reference;
    }
  
    /**
     * Sets class_of_school_year_type_reference
     * @param \Swagger\Client\Model\SchoolYearTypeReference $class_of_school_year_type_reference A reference to the related SchoolYearType resource.
     * @return $this
     */
    public function setClassOfSchoolYearTypeReference($class_of_school_year_type_reference)
    {
        
        $this->class_of_school_year_type_reference = $class_of_school_year_type_reference;
        return $this;
    }
    
    /**
     * Gets school_year_type_reference
     * @return \Swagger\Client\Model\SchoolYearTypeReference
     */
    public function getSchoolYearTypeReference()
    {
        return $this->school_year_type_reference;
    }
  
    /**
     * Sets school_year_type_reference
     * @param \Swagger\Client\Model\SchoolYearTypeReference $school_year_type_reference A reference to the related SchoolYearType resource.
     * @return $this
     */
    public function setSchoolYearTypeReference($school_year_type_reference)
    {
        
        $this->school_year_type_reference = $school_year_type_reference;
        return $this;
    }
    
    /**
     * Gets student_reference
     * @return \Swagger\Client\Model\StudentReference
     */
    public function getStudentReference()
    {
        return $this->student_reference;
    }
  
    /**
     * Sets student_reference
     * @param \Swagger\Client\Model\StudentReference $student_reference A reference to the related Student resource.
     * @return $this
     */
    public function setStudentReference($student_reference)
    {
        
        $this->student_reference = $student_reference;
        return $this;
    }
    
    /**
     * Gets entry_date
     * @return \\DateTime
     */
    public function getEntryDate()
    {
        return $this->entry_date;
    }
  
    /**
     * Sets entry_date
     * @param \\DateTime $entry_date The month, day, and year on which an individual enters and begins to receive instructional services in a school.
     * @return $this
     */
    public function setEntryDate($entry_date)
    {
        
        $this->entry_date = $entry_date;
        return $this;
    }
    
    /**
     * Gets entry_grade_level_descriptor
     * @return string
     */
    public function getEntryGradeLevelDescriptor()
    {
        return $this->entry_grade_level_descriptor;
    }
  
    /**
     * Sets entry_grade_level_descriptor
     * @param string $entry_grade_level_descriptor The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.
     * @return $this
     */
    public function setEntryGradeLevelDescriptor($entry_grade_level_descriptor)
    {
        
        $this->entry_grade_level_descriptor = $entry_grade_level_descriptor;
        return $this;
    }
    
    /**
     * Gets entry_grade_level_reason_type
     * @return string
     */
    public function getEntryGradeLevelReasonType()
    {
        return $this->entry_grade_level_reason_type;
    }
  
    /**
     * Sets entry_grade_level_reason_type
     * @param string $entry_grade_level_reason_type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setEntryGradeLevelReasonType($entry_grade_level_reason_type)
    {
        
        $this->entry_grade_level_reason_type = $entry_grade_level_reason_type;
        return $this;
    }
    
    /**
     * Gets entry_type_descriptor
     * @return string
     */
    public function getEntryTypeDescriptor()
    {
        return $this->entry_type_descriptor;
    }
  
    /**
     * Sets entry_type_descriptor
     * @param string $entry_type_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setEntryTypeDescriptor($entry_type_descriptor)
    {
        
        $this->entry_type_descriptor = $entry_type_descriptor;
        return $this;
    }
    
    /**
     * Gets repeat_grade_indicator
     * @return bool
     */
    public function getRepeatGradeIndicator()
    {
        return $this->repeat_grade_indicator;
    }
  
    /**
     * Sets repeat_grade_indicator
     * @param bool $repeat_grade_indicator An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.
     * @return $this
     */
    public function setRepeatGradeIndicator($repeat_grade_indicator)
    {
        
        $this->repeat_grade_indicator = $repeat_grade_indicator;
        return $this;
    }
    
    /**
     * Gets school_choice_transfer
     * @return bool
     */
    public function getSchoolChoiceTransfer()
    {
        return $this->school_choice_transfer;
    }
  
    /**
     * Sets school_choice_transfer
     * @param bool $school_choice_transfer An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.
     * @return $this
     */
    public function setSchoolChoiceTransfer($school_choice_transfer)
    {
        
        $this->school_choice_transfer = $school_choice_transfer;
        return $this;
    }
    
    /**
     * Gets exit_withdraw_date
     * @return \\DateTime
     */
    public function getExitWithdrawDate()
    {
        return $this->exit_withdraw_date;
    }
  
    /**
     * Sets exit_withdraw_date
     * @param \\DateTime $exit_withdraw_date The month, day, and year of the first day after the date of an individual's last attendance at a school (if known), the day on which an individual graduated, or the date on which it becomes known officially that an individual left school.
     * @return $this
     */
    public function setExitWithdrawDate($exit_withdraw_date)
    {
        
        $this->exit_withdraw_date = $exit_withdraw_date;
        return $this;
    }
    
    /**
     * Gets exit_withdraw_type_descriptor
     * @return string
     */
    public function getExitWithdrawTypeDescriptor()
    {
        return $this->exit_withdraw_type_descriptor;
    }
  
    /**
     * Sets exit_withdraw_type_descriptor
     * @param string $exit_withdraw_type_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setExitWithdrawTypeDescriptor($exit_withdraw_type_descriptor)
    {
        
        $this->exit_withdraw_type_descriptor = $exit_withdraw_type_descriptor;
        return $this;
    }
    
    /**
     * Gets residency_status_descriptor
     * @return string
     */
    public function getResidencyStatusDescriptor()
    {
        return $this->residency_status_descriptor;
    }
  
    /**
     * Sets residency_status_descriptor
     * @param string $residency_status_descriptor A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setResidencyStatusDescriptor($residency_status_descriptor)
    {
        
        $this->residency_status_descriptor = $residency_status_descriptor;
        return $this;
    }
    
    /**
     * Gets primary_school
     * @return bool
     */
    public function getPrimarySchool()
    {
        return $this->primary_school;
    }
  
    /**
     * Sets primary_school
     * @param bool $primary_school Indicates if a given enrollment record should be considered the primary record for a student. If omitted, the default is true.
     * @return $this
     */
    public function setPrimarySchool($primary_school)
    {
        
        $this->primary_school = $primary_school;
        return $this;
    }
    
    /**
     * Gets employed_while_enrolled
     * @return bool
     */
    public function getEmployedWhileEnrolled()
    {
        return $this->employed_while_enrolled;
    }
  
    /**
     * Sets employed_while_enrolled
     * @param bool $employed_while_enrolled An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.
     * @return $this
     */
    public function setEmployedWhileEnrolled($employed_while_enrolled)
    {
        
        $this->employed_while_enrolled = $employed_while_enrolled;
        return $this;
    }
    
    /**
     * Gets education_plans
     * @return \Swagger\Client\Model\StudentSchoolAssociationEducationPlan[]
     */
    public function getEducationPlans()
    {
        return $this->education_plans;
    }
  
    /**
     * Sets education_plans
     * @param \Swagger\Client\Model\StudentSchoolAssociationEducationPlan[] $education_plans An unordered collection of studentSchoolAssociationEducationPlans.  Indicates the type of Education Plan(s) the student is following, if appropriate; for example: Special Education IEP or Vocational/CTE, etc.
     * @return $this
     */
    public function setEducationPlans($education_plans)
    {
        
        $this->education_plans = $education_plans;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
