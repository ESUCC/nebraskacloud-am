<?php
/**
 * StaffEducationOrganizationAssignmentAssociation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * StaffEducationOrganizationAssignmentAssociation Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class StaffEducationOrganizationAssignmentAssociation implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'employment_staff_education_organization_employment_association_reference' => '\Swagger\Client\Model\StaffEducationOrganizationEmploymentAssociationReference',
        'education_organization_reference' => '\Swagger\Client\Model\EducationOrganizationReference',
        'staff_reference' => '\Swagger\Client\Model\StaffReference',
        'staff_classification_descriptor' => 'string',
        'begin_date' => '\\DateTime',
        'position_title' => 'string',
        'end_date' => '\\DateTime',
        'order_of_assignment' => 'int',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'employment_staff_education_organization_employment_association_reference' => 'employmentStaffEducationOrganizationEmploymentAssociationReference',
        'education_organization_reference' => 'educationOrganizationReference',
        'staff_reference' => 'staffReference',
        'staff_classification_descriptor' => 'staffClassificationDescriptor',
        'begin_date' => 'beginDate',
        'position_title' => 'positionTitle',
        'end_date' => 'endDate',
        'order_of_assignment' => 'orderOfAssignment',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'employment_staff_education_organization_employment_association_reference' => 'setEmploymentStaffEducationOrganizationEmploymentAssociationReference',
        'education_organization_reference' => 'setEducationOrganizationReference',
        'staff_reference' => 'setStaffReference',
        'staff_classification_descriptor' => 'setStaffClassificationDescriptor',
        'begin_date' => 'setBeginDate',
        'position_title' => 'setPositionTitle',
        'end_date' => 'setEndDate',
        'order_of_assignment' => 'setOrderOfAssignment',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'employment_staff_education_organization_employment_association_reference' => 'getEmploymentStaffEducationOrganizationEmploymentAssociationReference',
        'education_organization_reference' => 'getEducationOrganizationReference',
        'staff_reference' => 'getStaffReference',
        'staff_classification_descriptor' => 'getStaffClassificationDescriptor',
        'begin_date' => 'getBeginDate',
        'position_title' => 'getPositionTitle',
        'end_date' => 'getEndDate',
        'order_of_assignment' => 'getOrderOfAssignment',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $employment_staff_education_organization_employment_association_reference A reference to the related StaffEducationOrganizationEmploymentAssociation resource.
      * @var \Swagger\Client\Model\StaffEducationOrganizationEmploymentAssociationReference
      */
    protected $employment_staff_education_organization_employment_association_reference;
    
    /**
      * $education_organization_reference A reference to the related EducationOrganization resource.
      * @var \Swagger\Client\Model\EducationOrganizationReference
      */
    protected $education_organization_reference;
    
    /**
      * $staff_reference A reference to the related Staff resource.
      * @var \Swagger\Client\Model\StaffReference
      */
    protected $staff_reference;
    
    /**
      * $staff_classification_descriptor The titles of employment, official status, or rank of education staff.
      * @var string
      */
    protected $staff_classification_descriptor;
    
    /**
      * $begin_date Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the LEA.
      * @var \\DateTime
      */
    protected $begin_date;
    
    /**
      * $position_title The descriptive name of an individual's position.
      * @var string
      */
    protected $position_title;
    
    /**
      * $end_date Month, day, and year of the end or termination date of a staff member's employment, contract, or relationship with the LEA.
      * @var \\DateTime
      */
    protected $end_date;
    
    /**
      * $order_of_assignment Describes whether the assignment is this the staff member's primary assignment, secondary assignment, etc.
      * @var int
      */
    protected $order_of_assignment;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->employment_staff_education_organization_employment_association_reference = $data["employment_staff_education_organization_employment_association_reference"];
            $this->education_organization_reference = $data["education_organization_reference"];
            $this->staff_reference = $data["staff_reference"];
            $this->staff_classification_descriptor = $data["staff_classification_descriptor"];
            $this->begin_date = $data["begin_date"];
            $this->position_title = $data["position_title"];
            $this->end_date = $data["end_date"];
            $this->order_of_assignment = $data["order_of_assignment"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets employment_staff_education_organization_employment_association_reference
     * @return \Swagger\Client\Model\StaffEducationOrganizationEmploymentAssociationReference
     */
    public function getEmploymentStaffEducationOrganizationEmploymentAssociationReference()
    {
        return $this->employment_staff_education_organization_employment_association_reference;
    }
  
    /**
     * Sets employment_staff_education_organization_employment_association_reference
     * @param \Swagger\Client\Model\StaffEducationOrganizationEmploymentAssociationReference $employment_staff_education_organization_employment_association_reference A reference to the related StaffEducationOrganizationEmploymentAssociation resource.
     * @return $this
     */
    public function setEmploymentStaffEducationOrganizationEmploymentAssociationReference($employment_staff_education_organization_employment_association_reference)
    {
        
        $this->employment_staff_education_organization_employment_association_reference = $employment_staff_education_organization_employment_association_reference;
        return $this;
    }
    
    /**
     * Gets education_organization_reference
     * @return \Swagger\Client\Model\EducationOrganizationReference
     */
    public function getEducationOrganizationReference()
    {
        return $this->education_organization_reference;
    }
  
    /**
     * Sets education_organization_reference
     * @param \Swagger\Client\Model\EducationOrganizationReference $education_organization_reference A reference to the related EducationOrganization resource.
     * @return $this
     */
    public function setEducationOrganizationReference($education_organization_reference)
    {
        
        $this->education_organization_reference = $education_organization_reference;
        return $this;
    }
    
    /**
     * Gets staff_reference
     * @return \Swagger\Client\Model\StaffReference
     */
    public function getStaffReference()
    {
        return $this->staff_reference;
    }
  
    /**
     * Sets staff_reference
     * @param \Swagger\Client\Model\StaffReference $staff_reference A reference to the related Staff resource.
     * @return $this
     */
    public function setStaffReference($staff_reference)
    {
        
        $this->staff_reference = $staff_reference;
        return $this;
    }
    
    /**
     * Gets staff_classification_descriptor
     * @return string
     */
    public function getStaffClassificationDescriptor()
    {
        return $this->staff_classification_descriptor;
    }
  
    /**
     * Sets staff_classification_descriptor
     * @param string $staff_classification_descriptor The titles of employment, official status, or rank of education staff.
     * @return $this
     */
    public function setStaffClassificationDescriptor($staff_classification_descriptor)
    {
        
        $this->staff_classification_descriptor = $staff_classification_descriptor;
        return $this;
    }
    
    /**
     * Gets begin_date
     * @return \\DateTime
     */
    public function getBeginDate()
    {
        return $this->begin_date;
    }
  
    /**
     * Sets begin_date
     * @param \\DateTime $begin_date Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the LEA.
     * @return $this
     */
    public function setBeginDate($begin_date)
    {
        
        $this->begin_date = $begin_date;
        return $this;
    }
    
    /**
     * Gets position_title
     * @return string
     */
    public function getPositionTitle()
    {
        return $this->position_title;
    }
  
    /**
     * Sets position_title
     * @param string $position_title The descriptive name of an individual's position.
     * @return $this
     */
    public function setPositionTitle($position_title)
    {
        
        $this->position_title = $position_title;
        return $this;
    }
    
    /**
     * Gets end_date
     * @return \\DateTime
     */
    public function getEndDate()
    {
        return $this->end_date;
    }
  
    /**
     * Sets end_date
     * @param \\DateTime $end_date Month, day, and year of the end or termination date of a staff member's employment, contract, or relationship with the LEA.
     * @return $this
     */
    public function setEndDate($end_date)
    {
        
        $this->end_date = $end_date;
        return $this;
    }
    
    /**
     * Gets order_of_assignment
     * @return int
     */
    public function getOrderOfAssignment()
    {
        return $this->order_of_assignment;
    }
  
    /**
     * Sets order_of_assignment
     * @param int $order_of_assignment Describes whether the assignment is this the staff member's primary assignment, secondary assignment, etc.
     * @return $this
     */
    public function setOrderOfAssignment($order_of_assignment)
    {
        
        $this->order_of_assignment = $order_of_assignment;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
