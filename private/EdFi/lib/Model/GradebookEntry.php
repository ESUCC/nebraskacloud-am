<?php
/**
 * GradebookEntry
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * GradebookEntry Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GradebookEntry implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'grading_period_reference' => '\Swagger\Client\Model\GradingPeriodReference',
        'section_reference' => '\Swagger\Client\Model\SectionReference',
        'title' => 'string',
        'date_assigned' => '\\DateTime',
        'type' => 'string',
        'description' => 'string',
        'learning_objectives' => '\Swagger\Client\Model\GradebookEntryLearningObjective[]',
        'learning_standards' => '\Swagger\Client\Model\GradebookEntryLearningStandard[]',
        '_etag' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'grading_period_reference' => 'gradingPeriodReference',
        'section_reference' => 'sectionReference',
        'title' => 'title',
        'date_assigned' => 'dateAssigned',
        'type' => 'type',
        'description' => 'description',
        'learning_objectives' => 'learningObjectives',
        'learning_standards' => 'learningStandards',
        '_etag' => '_etag'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'grading_period_reference' => 'setGradingPeriodReference',
        'section_reference' => 'setSectionReference',
        'title' => 'setTitle',
        'date_assigned' => 'setDateAssigned',
        'type' => 'setType',
        'description' => 'setDescription',
        'learning_objectives' => 'setLearningObjectives',
        'learning_standards' => 'setLearningStandards',
        '_etag' => 'setEtag'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'grading_period_reference' => 'getGradingPeriodReference',
        'section_reference' => 'getSectionReference',
        'title' => 'getTitle',
        'date_assigned' => 'getDateAssigned',
        'type' => 'getType',
        'description' => 'getDescription',
        'learning_objectives' => 'getLearningObjectives',
        'learning_standards' => 'getLearningStandards',
        '_etag' => 'getEtag'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id The unique identifier of the resource.
      * @var string
      */
    protected $id;
    
    /**
      * $grading_period_reference A reference to the related GradingPeriod resource.
      * @var \Swagger\Client\Model\GradingPeriodReference
      */
    protected $grading_period_reference;
    
    /**
      * $section_reference A reference to the related Section resource.
      * @var \Swagger\Client\Model\SectionReference
      */
    protected $section_reference;
    
    /**
      * $title The name or title of the activity to be recorded in the gradebook entry.
      * @var string
      */
    protected $title;
    
    /**
      * $date_assigned The date the assignment, homework, or assessment was assigned or executed.
      * @var \\DateTime
      */
    protected $date_assigned;
    
    /**
      * $type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
      * @var string
      */
    protected $type;
    
    /**
      * $description A detailed description of the entity.
      * @var string
      */
    protected $description;
    
    /**
      * $learning_objectives An unordered collection of gradebookEntryLearningObjectives.  Learning Objectives associated with the Gradebook Entry.
      * @var \Swagger\Client\Model\GradebookEntryLearningObjective[]
      */
    protected $learning_objectives;
    
    /**
      * $learning_standards An unordered collection of gradebookEntryLearningStandards.  
      * @var \Swagger\Client\Model\GradebookEntryLearningStandard[]
      */
    protected $learning_standards;
    
    /**
      * $_etag A unique system-generated value that identifies the version of the resource.
      * @var string
      */
    protected $_etag;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->grading_period_reference = $data["grading_period_reference"];
            $this->section_reference = $data["section_reference"];
            $this->title = $data["title"];
            $this->date_assigned = $data["date_assigned"];
            $this->type = $data["type"];
            $this->description = $data["description"];
            $this->learning_objectives = $data["learning_objectives"];
            $this->learning_standards = $data["learning_standards"];
            $this->_etag = $data["_etag"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id The unique identifier of the resource.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets grading_period_reference
     * @return \Swagger\Client\Model\GradingPeriodReference
     */
    public function getGradingPeriodReference()
    {
        return $this->grading_period_reference;
    }
  
    /**
     * Sets grading_period_reference
     * @param \Swagger\Client\Model\GradingPeriodReference $grading_period_reference A reference to the related GradingPeriod resource.
     * @return $this
     */
    public function setGradingPeriodReference($grading_period_reference)
    {
        
        $this->grading_period_reference = $grading_period_reference;
        return $this;
    }
    
    /**
     * Gets section_reference
     * @return \Swagger\Client\Model\SectionReference
     */
    public function getSectionReference()
    {
        return $this->section_reference;
    }
  
    /**
     * Sets section_reference
     * @param \Swagger\Client\Model\SectionReference $section_reference A reference to the related Section resource.
     * @return $this
     */
    public function setSectionReference($section_reference)
    {
        
        $this->section_reference = $section_reference;
        return $this;
    }
    
    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }
  
    /**
     * Sets title
     * @param string $title The name or title of the activity to be recorded in the gradebook entry.
     * @return $this
     */
    public function setTitle($title)
    {
        
        $this->title = $title;
        return $this;
    }
    
    /**
     * Gets date_assigned
     * @return \\DateTime
     */
    public function getDateAssigned()
    {
        return $this->date_assigned;
    }
  
    /**
     * Sets date_assigned
     * @param \\DateTime $date_assigned The date the assignment, homework, or assessment was assigned or executed.
     * @return $this
     */
    public function setDateAssigned($date_assigned)
    {
        
        $this->date_assigned = $date_assigned;
        return $this;
    }
    
    /**
     * Gets type
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }
  
    /**
     * Sets type
     * @param string $type A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.
     * @return $this
     */
    public function setType($type)
    {
        
        $this->type = $type;
        return $this;
    }
    
    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
  
    /**
     * Sets description
     * @param string $description A detailed description of the entity.
     * @return $this
     */
    public function setDescription($description)
    {
        
        $this->description = $description;
        return $this;
    }
    
    /**
     * Gets learning_objectives
     * @return \Swagger\Client\Model\GradebookEntryLearningObjective[]
     */
    public function getLearningObjectives()
    {
        return $this->learning_objectives;
    }
  
    /**
     * Sets learning_objectives
     * @param \Swagger\Client\Model\GradebookEntryLearningObjective[] $learning_objectives An unordered collection of gradebookEntryLearningObjectives.  Learning Objectives associated with the Gradebook Entry.
     * @return $this
     */
    public function setLearningObjectives($learning_objectives)
    {
        
        $this->learning_objectives = $learning_objectives;
        return $this;
    }
    
    /**
     * Gets learning_standards
     * @return \Swagger\Client\Model\GradebookEntryLearningStandard[]
     */
    public function getLearningStandards()
    {
        return $this->learning_standards;
    }
  
    /**
     * Sets learning_standards
     * @param \Swagger\Client\Model\GradebookEntryLearningStandard[] $learning_standards An unordered collection of gradebookEntryLearningStandards.  
     * @return $this
     */
    public function setLearningStandards($learning_standards)
    {
        
        $this->learning_standards = $learning_standards;
        return $this;
    }
    
    /**
     * Gets _etag
     * @return string
     */
    public function getEtag()
    {
        return $this->_etag;
    }
  
    /**
     * Sets _etag
     * @param string $_etag A unique system-generated value that identifies the version of the resource.
     * @return $this
     */
    public function setEtag($_etag)
    {
        
        $this->_etag = $_etag;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
